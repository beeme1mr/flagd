on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}
  DEFAULT_GO_VERSION: 1.19
  PUBLIC_KEY_FILE: publicKey.pub
  GOPRIVATE: buf.build/gen/go

name: Release Please
jobs:
  release-please:
    runs-on: ubuntu-latest
  #   # Release-please creates a PR that tracks all changes
    steps:
      - uses: google-github-actions/release-please-action@d3c71f9a0a55385580de793de58da057b3560862 # v3
        id: release
        with:
          command: manifest
          token: ${{secrets.GITHUB_TOKEN}}
          default-branch: main
      - name: Dump RELEASE_PLEASE_OUTPUT
        run: |
          echo "$RELEASE_PLEASE_OUTPUT"
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      paths_released: ${{ steps.release.outputs.paths_released }}
      flagd_version: ${{ steps.release.outputs.flagd--version }}
      flagd_tag_name: ${{ steps.release.outputs.flagd--tag_name }}
      
  bundle-release:
    needs: release-please
    runs-on: ubuntu-latest 
    if: ${{ needs.release-please.outputs.releases_created }}
    strategy:
      matrix: 
        path: ${{ fromJSON(needs.release-please.outputs.paths_released) }}
        # we want to filter on the matrix to make sure we dont release on anything other than flagd / proxy changes

    env:
      TAG: ${{ needs.release-please.outputs[format('{0}_tag_name', matrix.path)] }} 
      VERSION: v${{ needs.release-please.outputs[format('{0}_version', matrix.path)] }}

    steps:

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
        with:
          go-version: ${{ env.DEFAULT_GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          ref: ${{ env.TAG }}
      
      - name: Log in to the Container registry
        uses: docker/login-action@ec9cdf07d570632daeb912f5b2099cb9ec1d01e6
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@3343011071fa59c64a174cc6aa415dc13b31b7b2
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.path }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Build
        id: build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./${{ matrix.path }}/build.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.path }}:latest
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.path }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }} 
          build-args: |
            VERSION=${{ env.VERSION }}
            COMMIT=${{ github.sha }}
            DATE=${{ steps.date.outputs.date }}

      # - name: Install Cosign
      #   uses: sigstore/cosign-installer@main

      # - name: Sign the image
      #   run: |
      #     cosign sign --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.path }}:${{ env.VERSION }}
      #     cosign public-key --key env://COSIGN_PRIVATE_KEY --outfile ${{ env.PUBLIC_KEY_FILE }}
      #   env:
      #     COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
      #     COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
      
      - name: Generate image SBOM file name
        id: image-sbom-file-gen
        run: echo "IMG_SBOM_FILE=${{ format('{0}-{1}-sbom.spdx', matrix.path, env.VERSION) }}" >> $GITHUB_OUTPUT

      - name: SBOM for latest image
        uses: anchore/sbom-action@07978da4bdb4faa726e52dfc6b1bed63d4b56479 # v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ matrix.path }}:${{ env.VERSION }}
          artifact-name: ${{ steps.image-sbom-file-gen.outputs.IMG_SBOM_FILE }}
          output-file: ${{ steps.image-sbom-file-gen.outputs.IMG_SBOM_FILE }}


      - name: Bundle release assets
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          tag_name: ${{ env.TAG }}
          files: |
            ./*.tar.gz
            ${{ env.PUBLIC_KEY_FILE }}
            ${{ steps.image-sbom-file-gen.outputs.IMG_SBOM_FILE }} 

    
    needs: release-please
    runs-on: ubuntu-latest 
    if: ${{ needs.release-please.outputs.releases_created }}
    strategy:
      matrix: 
        path: ${{ fromJSON(needs.release-please.outputs.paths_released) }}
        # we want to filter on the matrix to make sure we dont release on anything other than flagd / proxy changes

    env:
      TAG: ${{ needs.release-please.outputs[format('{0}_tag_name', matrix.path)] }} 
      GORELEASER_CURRENT_TAG: v${{ needs.release-please.outputs[format('{0}_version', matrix.path)] }}

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          ref: ${{ env.TAG }}

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
        with:
          go-version: ${{ env.DEFAULT_GO_VERSION }}
    
      - name: setup for builds
        run: |
          make workspace-init
          mv ./${{ matrix.path }}/CHANGELOG.md CHANGELOG.md 

      - name: build darwin arm64
        run: |
          env GOOS=darwin GOARCH=arm64 go build -o ./${{ matrix.path }}_darwin_arm64 ./${{ matrix.path }}/main.go
          tar -cvzf ${{ matrix.path }}_${{ env.VERSION_NO_PREFIX }}_Darwin_arm64.tar.gz ./${{ matrix.path }}_darwin_arm64 ./LICENSE ./CHANGELOG.md ./README.md

      - name: build darwin x86_64
        run: |
          env GOOS=darwin GOARCH=amd64 go build -o ./${{ matrix.path }}_darwin_x86_64 ./${{ matrix.path }}/main.go
          tar -cvzf ${{ matrix.path }}_${{ env.VERSION_NO_PREFIX }}_Darwin_x86_64.tar.gz ./${{ matrix.path }}_darwin_x86_64 ./LICENSE ./CHANGELOG.md ./README.md

      - name: build linux arm64
        run: |
          env GOOS=linux GOARCH=arm64 go build -o ./${{ matrix.path }}_linux_arm64 ./${{ matrix.path }}/main.go
          tar -cvzf ${{ matrix.path }}_${{ env.VERSION_NO_PREFIX }}_Linux_arm64.tar.gz ./${{ matrix.path }}_linux_arm64 ./LICENSE ./CHANGELOG.md ./README.md

      - name: build linux x86_64
        run: |
          env GOOS=linux GOARCH=amd64 go build -o ./${{ matrix.path }}_linux_x86_64 ./${{ matrix.path }}/main.go
          tar -cvzf ${{ matrix.path }}_${{ env.VERSION_NO_PREFIX }}_Linux_x86_64.tar.gz ./${{ matrix.path }}_linux_x86_64 ./LICENSE ./CHANGELOG.md ./README.md

      - name: build linux i386
        run: |
          env GOOS=linux GOARCH=386 go build -o ./${{ matrix.path }}_linux_i386 ./${{ matrix.path }}/main.go
          tar -cvzf ${{ matrix.path }}_${{ env.VERSION_NO_PREFIX }}_Linux_i386.tar.gz ./${{ matrix.path }}_linux_i386 ./LICENSE ./CHANGELOG.md ./README.md

      - name: build windows x86_64
        run: |
          env GOOS=windows GOARCH=amd64 go build -o ./${{ matrix.path }}_windows_x86_64 ./${{ matrix.path }}/main.go
          tar -cvzf ${{ matrix.path }}_${{ env.VERSION_NO_PREFIX }}_Windows_x86_64.tar.gz ./${{ matrix.path }}_windows_x86_64 ./LICENSE ./CHANGELOG.md ./README.md

      - name: build windows i386
        run: |
          env GOOS=windows GOARCH=386 go build -o ./${{ matrix.path }}_windows_i386 ./${{ matrix.path }}/main.go
          tar -cvzf ${{ matrix.path }}_${{ env.VERSION_NO_PREFIX }}_Windows_i386.tar.gz ./${{ matrix.path }}_windows_i386 ./LICENSE ./CHANGELOG.md ./README.md

      - name: Bundle release assets
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          tag_name: ${{ env.TAG }}
          files: |
            ./*.tar.gz

  # # homebrew:
  # #   name: Bump homebrew-core formula
  # #   needs: release-please
  # #   runs-on: ubuntu-latest
  # #   if: ${{ needs.release-please.outputs.releases_created }}
  # #   steps:
  # #     - uses: mislav/bump-homebrew-formula-action@v2
  # #       with:
  # #         formula-name: flagd
  # #         tag-name: ${{ needs.release-please.outputs.release_tag_name }}
  # #         download-url: https://github.com/${{ github.repository }}.git
  # #         commit-message: |
  # #           {{formulaName}} {{version}}

  # #           Created by https://github.com/mislav/bump-homebrew-formula-action
  # #       env:
  # #         COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
